import { v4 as uuidv4 } from 'uuid';
import { toUpperText, mmddyy, ChangeText } from './Converter';
import { jwtDecode } from 'jwt-decode';

export const generateLoanDataLc = (getAppDetails) => {
    const token = localStorage.getItem("UTK");
    return {
        LoanAppId: toUpperText(uuidv4()),
        Dpa: getAppDetails.dataPrivacy ? 1 : 0,
        LoanType: getAppDetails.loanRenewal ? 2 : 1,
        Product: getAppDetails.loanProd,
        DepartureDate: getAppDetails.loanDateDep ? mmddyy(getAppDetails.loanDateDep) : '',
        Purpose: parseInt(getAppDetails.loanPurpose),
        Amount: parseFloat(getAppDetails.loanAmount.replace(',', '')),
        Terms: parseInt(getAppDetails.loanTerms),
        Consultant: getAppDetails.consultName,
        ConsultantNo: getAppDetails.consultNumber,
        ConsultantProfile: getAppDetails.consultProfile ? ChangeText(getAppDetails.consultProfile) : '',
        RecUser: jwtDecode(token).USRID,
        Branch: 11,
        // Additional fields for LC
        FirstName: getAppDetails.ofwfname,
        MiddleName: getAppDetails.ofwmname,
        LastName: getAppDetails.ofwlname,
        Suffix: parseInt(getAppDetails.ofwsuffix),
        Birthday: mmddyy(getAppDetails.ofwbdate),
        Gender: getAppDetails.ofwgender,
        CivilStatus: getAppDetails.ofwmstatus,
        Dependent: parseInt(getAppDetails.ofwdependents),
        Email: getAppDetails.ofwemail,
        MobileNo: getAppDetails.ofwmobile,
        FbProfile: getAppDetails.ofwfblink,
        Ownership: parseInt(getAppDetails.ofwresidences),
        ProcinceId: getAppDetails.ofwPresProv,
        MunicipalityId: getAppDetails.ofwPresMunicipality,
        BarangyId: getAppDetails.ofwPresBarangay,
        Address1: getAppDetails.ofwPresStreet,
        CountryId: '',
        Salary: getAppDetails.ofwsalary ? parseFloat(getAppDetails.ofwsalary.replace(',', '')) : 0,
        Status: 29,
    };
};

export const generateLoanDataDirect = (getAppDetails) => ({
    LoanAppId: toUpperText(uuidv4()),
    Dpa: getAppDetails.dataPrivacy ? 1 : 0,
    Product: getAppDetails.loanProd,
    BranchId: parseInt(getAppDetails.loanBranch) ? parseInt(getAppDetails.loanBranch) : 11,
    Purpose: parseInt(getAppDetails.loanPurpose),
    LoanType: getAppDetails.loanRenewal ? 2 : 1,
    DepartureDate: getAppDetails.loanDateDep ? mmddyy(getAppDetails.loanDateDep) : '',
    Amount: parseFloat(getAppDetails.loanAmount.replaceAll(',', '')),
    Terms: parseInt(getAppDetails.loanTerms),
    Channel: parseInt(getAppDetails.hckfi) || 0,
    Consultant: getAppDetails.consultName,
    ConsultantNo: getAppDetails.consultNumber,
    ConsultantProfile: getAppDetails.consultProfile ? ChangeText(getAppDetails.consultProfile) : '',
    ReferredBy: getAppDetails.loanReferredBy ? parseInt(getAppDetails.loanReferredBy) : 0,
    Status: 29,
    IsOfw: 1,
    FirstName: getAppDetails.ofwfname,
    MiddleName: getAppDetails.ofwmname,
    LastName: getAppDetails.ofwlname,
    Suffix: parseInt(getAppDetails.ofwsuffix),
    Birthday: mmddyy(getAppDetails.ofwbdate),
    Gender: getAppDetails.ofwgender,
    CivilStatus: getAppDetails.ofwmstatus,
    Dependent: parseInt(getAppDetails.ofwdependents),
    Email: getAppDetails.ofwemail,
    MobileNo: getAppDetails.ofwmobile,
    FbProfile: getAppDetails.ofwfblink ? ChangeText(getAppDetails.ofwfblink) : '',
    ValidId: parseInt(getAppDetails.ofwvalidid) || 0,
    ValidIdNo: getAppDetails.ofwidnumber,
    Country: getAppDetails.ofwcountry,
    JobTitle: getAppDetails.ofwjobtitle,
    Employer: getAppDetails.ofwcompany,
    Salary: getAppDetails.ofwsalary ? parseFloat(getAppDetails.ofwsalary.replaceAll(',', '')) : 0,
    AddressType: '',
    Ownership: parseInt(getAppDetails.ofwresidences),
    CountryId: '',
    ProcinceId: getAppDetails.ofwPresProv,
    MunicipalityId: getAppDetails.ofwPresMunicipality,
    BarangyId: getAppDetails.ofwPresBarangay,
    Address1: getAppDetails.ofwPresStreet ? ChangeText(getAppDetails.ofwPresStreet) : '',
    RentAmount: parseInt(getAppDetails.ofwresidences) === 3 ? parseInt(getAppDetails.rentAmount.replaceAll(',', '')) : 0,
    IsCurrPerm: getAppDetails.ofwSameAdd ? 1 : 0,

    PerAddressType: '',
    PerCountryId: '',
    PerProcinceId: getAppDetails.ofwPermProv,
    PerMunicipalityId: getAppDetails.ofwPermMunicipality,
    PerBarangyId: getAppDetails.ofwPermBarangay,
    PerAddress1: getAppDetails.ofwPermStreet ? ChangeText(getAppDetails.ofwPermStreet) : '',

    BenIsOfw: 2,
    BenFirstName: getAppDetails.benfname,
    BenMiddleName: getAppDetails.benmname,
    BenLastName: getAppDetails.benlname,
    BenSuffix: parseInt(getAppDetails.bensuffix) || 0,
    BenBirthday: getAppDetails.benbdate ? mmddyy(getAppDetails.benbdate) : '',
    BenGender: parseInt(getAppDetails.bengender) || 0,
    BenCivilStatus: getAppDetails.benmstatus,
    BenEmail: getAppDetails.benemail || '',
    BenMobileNo: getAppDetails.bennumber || '',
    BenFbProfile: '',
    BenRelationship: parseInt(getAppDetails.benrelationship) || 0,

    BenAddressType: '',
    BenCountryId: '',
    BenProcinceId: getAppDetails.benpresprov || '',
    BenMunicipalityId: getAppDetails.benpresmunicipality || '',
    BenBarangyId: getAppDetails.benpresbarangay || '',
    BenAddress1: getAppDetails.benpresstreet ? ChangeText(getAppDetails.benpresstreet) : '',
    BenOwnership: 0,
});

